6.3 工作原理
	当程序运行时，我们使用ConcurrentQueue集合实例创建了一个任务队列。然后创建了一个取消标志，它是用来在我们将任务放人队列后停止工作的。接下来启动了一个单独的工作线程来将任务放人任务队列中。
该部分为异步处理产生了工作量。现在定义该程序中消费任务的部分。我们创建了四个工作者，它们会随机等待一段时间，然后从任务队列中获取一个任务，处理该任务，一直重复整个过程直到我们发出取消标志信
号。最后，我们启动产生任务的线程，等待该线程完成。然后使用取消标志给消费者发信号我们完成了工作。最后一步将等待所有的消费者完成。我们看到队列中的任务按从前到后的顺序被处理，但一个后面的任务
是有可能会比前面的任务先处理的，因为我们有四个工作者独立地运行，而且任务处理时间并不是恒定的。我们看到访问该队列是线程安全的，没有一个元素会被提取两次。