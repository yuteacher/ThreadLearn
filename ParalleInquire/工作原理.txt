73工作原理
当程序运行时，我们创建了一个LINQ查洵，其使用反射API来查询加载到当前应用程序域中的所有组件中名称以“web”开头的类型。我们使用方法模拟处
理每个项时间的延迟，并使用PrintInfo方法打印结果。我们也使用了stopwatch类来测量每个查询的执行时间。首先我们运行了一个通常的顺序LINQ查询。此
时并没有并行化，所有任何操作都运行在当前线程。该查询的第二版显式地使用了ParallelEnumerable类。ParallelEnumerable包含了PLINQ的逻辑实现，并且作为
IEnumerable集合功能的一组扩展方法。通常无需显式地使用该类，在这里是为了演示PLINQ的实际工作方式。第二个版本以并行的方式运行操作。然而，
默认情况下结果会被合并到单个线程中，所以查询的执行时间应该比第一个版本少几秒第三个版本展示了如何使用AsParallel方法来将LINQ查询按声明的方
式并行化运行。这里我们并不关心实现细节，只是为了说明我们想以并行的方式运行。然而．该版本的关键不同处是我们使用了ForAII方法来打印查询结
果。打印结果操作与任务被处理的线程是同一个线程，跳过了结果合并步骤。它允许我们也能以并行的方式运行Print1nfi。方法，甚至该版本运行速度比
之前的版本更快最后一个例子展示了如何使用AsSequential方法将PLINQ查询以顺序方式运行。可以看到该查询运行方式与第一个示例完全一样