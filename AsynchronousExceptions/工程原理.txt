5．6．3工作原理
	我们运行了三个场景来展示在C#中使用async和await时关于错误处理的最常见情况第一种情况是最简单的，并且与常见的同步代码几乎完全一样。我们只使用try/catch声明即可获取异常细节一个很常
见的错误是对一个以上的异步操作使用awan时还使用以上方式。
	如果仍像第一种情况一样使用catch代码块，则只能从底层的AggregateExcepuon对象中得到第一个异常为了收集所有异常信息，可以使用await任务的Exception属性。
	在第三种情况中，我们使用AggregateExcepuon的Flatten方法将层级异常放人一个列表，并且从中提取出所有的底层异常