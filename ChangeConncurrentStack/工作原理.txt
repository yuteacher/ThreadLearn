6.4工作原理
	当程序运行时，我们创建了一个ConcurrentStack集合的实例。其余的代码与前一小节中几乎一样，唯一不同之处是我们对并发堆栈使用Push和TryPop方法，而对并发队列使用Enqueue和TryDequeue 方法。
现在可以看到任务处理的顺序被改变了。堆栈是一个LIFO集合，工作者先处理最近的任务。在并发队列中，任务被处理的顺序与被添加的顺序几乎一致。这意味着根据工作者的数量，我们必将在一定时间窗内
处理先被创建的任务。而在堆中，早先创建的任务具有较低的优先级，而且直到生产者停止向堆栈中放人更多任务后，该任务才有可能被处理。这种行为是确定的，最好在该场景下使用队列。