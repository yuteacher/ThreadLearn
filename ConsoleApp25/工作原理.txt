10.4.3 工作原理
	在之前的小节中，我们实现了一个并行管道模式以顺序阶段的方式处理元素。这是个很常见的问题，编程实现该算法的其中一个被推荐的方式是使用微软提供的 TPL数据流库。该库通过 NuGet分发，所以很容易在应用程序中安装和使用。
	TPL数据流库包含不同类型的块，这些块可以根据复杂的处理过程以不同的方式连接这些过程可以按需并行运行或顺序运行。为了展示一些可用的基础设施，我们借助于TPL数据流库实现了前一小节中的场景。
	首先我们定义了不同的块来处理数据。请注意这些块有不同的选项，可以通过各自的构造函数来指定。这些选项是非常重要的。例如，我们给每个定义的块中传人取消标志，当发出取消信号时，所有块将停止工作。
	先从BuferBlock开始处理。这块储存元素将元素传给流中的下一个块。我们通过指定BoundedCapacity选项值，强制其容量最多为5个元素。这意味着当已经有5个元素在该块中时，它将停止接收新元素，直到一个现有元素被传送给下一个块。
	接下来的块类型是TransformBlock。该块用于数据转换步骤。我们定义了两个转换块，其中一个将整数转换为小数，第二个将小数值转换为字符串。该块有一个MaxDegreeOfParallelism 选项，指定了同时运行的最大工作线程数。
	最后一个块是 ActionBlock类型。该块将对每个传人的元素运行一个指定的操作。
	现在，我们使用LinkTo方法把这些块连接到一起。这里我们拥有的是一个简单的顺序的数据流，但创建一个更复杂的数据流的模板也是可行的。这里我们通过给PropagateCompletion设置为true提供了一个DatafowLinkOptions选项。这意味着
当步骤完成时，将自动将结果和异常传播到下一个阶段。我们开始并行地向缓冲块中添加项，并且当完成添加元素后调用块的Complete方法。然后等待最后的块来完成。一旦有取消标志发出我们可以处理 OperationCancelledException，并且取消
整个进程。