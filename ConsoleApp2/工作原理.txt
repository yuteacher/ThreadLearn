7 ． 4 工 作 原 理
	该 程 序 演 示 了 多 个 可 供 程 序 员 使 用 的 非 常 有 用 的 P 凵 NQ 选 项 。 我 们 先 创 建 了 一 个 PLINQ 查 询 ， 然 后 又 创 建 了 一 个 调 整 了 PLINQ 选 项 的 查 询 先 从 取 消 选 項 开 始
。 接 受 一 个 取 消 标 志 对 象 的 山 C “ № " 。 n 方 法 可 用 于 取 消 查 询 。 本 例 中 我 们 三 秒 后 发 出 取 消 标 志 信 号 ， 这 导 致 查 询 中 攏 出 O rationCan 曰 囡 E № 邙 tion 异 常 ， 并
且 取 消 了 軀 余 的 工 作 然 后 可 以 为 查 询 指 定 并 行 度 。 这 是 被 用 于 执 行 查 询 时 实 际 并 行 分 割 数 在 第 一 节 中 我 们 使 用 了 Parallel.ForEach 循 环 ． 其 拥 有 最 大 并 行 度 选
項 。 该 选 項 与 本 节 中 的 不 一 样 ， 这 是 因 为 它 指 定 了 一 个 最 大 的 分 割 值 ， 但 如 果 基 础 设 施 决 定 最 好 使 用 较 少 的 并 行 度 以 节 省 资 源 和 提 高 性 能 ． 那 么 并 行 度 会
小 于 最 大 值 另 一 个 有 意 思 的 选 项 是 使 用 WithExecutionMode 方 法 来 重 载 查 询 执 行 的 模 式 。 PLINQ 基 础 设 施 如 果 认 为 并 行 化 某 查 询 只 会 增 加 工 作 量 并 且 运 行 更 慢 ， 那
么 将 会 以 序 模 式 执 行 该 查 询 。 但 我 们 可 以 强 制 该 查 询 以 并 行 的 方 式 运 行 。 可 以 使 用 WithMergeOptions 方 法 调 整 对 查 询 结 果 的 处 理 。 默 认 模 式 是 PLINQ 基 础 设 施 在
查 询 返 回 结 果 之 前 会 缓 存 一 定 数 量 的 结 果 。 如 果 查 询 花 费 了 大 量 的 时 间 ， 更 合 理 的 方 式 是 关 闭 结 果 缓 存 从 而 尽 可 能 快 地 得 到 结 果 。 最 后 一 个 选 项 是 AsOrdered 
方 法 。 当 使 用 并 行 执 行 时 ． 集 合 中 的 项 有 可 能 不 是 被 顺 序 处 理 的 。 集 合 中 相 后 的 项 可 能 会 比 稍 前 的 项 先 处 理 。 为 了 防 止 该 情 况 ． 我 们 可 以 显 式 的 对 并 行 查
询 调 用 AsOrdered 方 法 ， 来 告 诉 PLINQ 基 础 设 施 我 们 打 算 按 项 在 集 合 中 的 顺 序 来 进 行 处 理